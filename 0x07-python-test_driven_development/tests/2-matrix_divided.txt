A test for dividing a list by an integer
Import Python module + collections
>>> import sys
>>> sys.path.insert(1, '../')
>>> my_lib = __import__("2-matrix_divided")
>>> func = my_lib.matrix_divided

# Test case 1: Dividing a matrix by an integer
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> divisor = 2
>>> func(matrix, divisor)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test case 2: Dividing an empty matrix by an integer
>>> matrix = []
>>> divisor = 3
>>> func(matrix, divisor)
[]

# Test case 3: Dividing a matrix by zero
>>> matrix = [[1, 2], [3, 4]]
>>> divisor = 0
>>> func(matrix, divisor)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 4: Dividing a matrix by a negative integer
>>> matrix = [[-1, -2], [-3, -4]]
>>> divisor = -2
>>> func(matrix, divisor)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, '5', 6]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats